name: 🚀 うちのきろく Deploy

on:
  push:
    branches: [main]
  workflow_run:
    workflows: ["🏠 うちのきろく CI"]
    types: [completed]
    branches: [main]

env:
  NODE_VERSION: '18'
  VPS_HOST: '160.251.136.92'
  VPS_USER: 'root'
  APP_PATH: '/var/www/uchi'

jobs:
  deploy:
    name: 🚀 Deploy to VPS
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔐 Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          
          # SSH鍵をBase64デコードして保存（改行問題回避）
          echo "${{ secrets.VPS_SSH_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # SSH設定ファイル作成
          cat > ~/.ssh/config << EOF
          Host vps
            HostName ${{ env.VPS_HOST }}
            User ${{ env.VPS_USER }}
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking no
            UserKnownHostsFile /dev/null
          EOF
          chmod 600 ~/.ssh/config
          
          # SSH鍵の内容とフォーマット確認
          echo "🔍 SSH Key debugging:"
          echo "Key file size: $(wc -c ~/.ssh/id_rsa)"
          echo "First line: $(head -1 ~/.ssh/id_rsa)"
          echo "Last line: $(tail -1 ~/.ssh/id_rsa)"
          
          # SSH鍵の形式確認
          echo "🔍 SSH Key validation:"
          ssh-keygen -l -f ~/.ssh/id_rsa 2>&1 || echo "Key format validation failed"
          
          # OpenSSL形式確認
          echo "🔍 OpenSSL validation:"
          openssl rsa -in ~/.ssh/id_rsa -check -noout 2>&1 || echo "OpenSSL validation failed"
          
          # 接続テスト（詳細ログ付き）
          echo "🔗 Testing SSH connection with verbose output:"
          ssh vps "echo 'SSH connection successful'" || echo "Initial connection failed"
          
      - name: 🔍 VPS Environment Check
        run: |
          ssh vps "
            echo '🔍 VPS Environment Information:'
            echo 'Hostname:' \$(hostname)
            echo 'Current user:' \$(whoami)
            echo 'Working directory:' \$(pwd)
            echo 'App directory exists:' \$([ -d '${{ env.APP_PATH }}' ] && echo 'YES' || echo 'NO')
            echo 'Node version:' \$(node --version 2>/dev/null || echo 'Not installed')
            echo 'NPM version:' \$(npm --version 2>/dev/null || echo 'Not installed')
            echo 'Running processes:' \$(ps aux | grep -E '(next|npm)' | grep -v grep | wc -l) 'processes'
          "
          
      - name: 🚀 Deploy Application
        run: |
          echo "🚀 Starting deployment to VPS..."
          
          ssh vps << 'DEPLOY_EOF'
            echo "📁 Navigating to app directory..."
            cd /var/www/uchi
            
            echo "🧹 Stopping existing processes..."
            pkill -f next || echo "No processes to stop"
            
            echo "🔄 Updating code..."
            git pull origin main
            
            echo "📦 Installing dependencies..."
            npm ci --only=production
            
            echo "🗄️ Updating database..."
            npx prisma generate
            npx prisma db push --accept-data-loss || echo "Database push completed"
            
            echo "🏗️ Building application..."
            npm run build
            
            echo "🚀 Starting application..."
            nohup ./start-with-env.sh > deploy.log 2>&1 &
            
            echo "✅ Deployment completed!"
            sleep 5
            
            echo "📊 Status check:"
            ps aux | grep -E "(next|npm)" | grep -v grep || echo "Application starting..."
          DEPLOY_EOF
          
      - name: ✅ Health check
        run: |
          echo '✅ Performing health check...'
          for i in {1..6}; do
            if curl -f -s https://uchinokiroku.com > /dev/null; then
              echo "✅ Health check passed (attempt $i)"
              break
            else
              echo "⏳ Waiting for application to start (attempt $i/6)..."
              sleep 10
            fi
            if [ $i -eq 6 ]; then
              echo "❌ Health check failed after 6 attempts"
              ssh vps "
                cd ${{ env.APP_PATH }}
                echo '📋 Application logs:'
                tail -50 deploy.log
              "
              exit 1
            fi
          done
          
      - name: 📊 Deployment summary
        if: always()
        run: |
          ssh vps "
            cd ${{ env.APP_PATH }}
            echo '📊 Deployment Summary:'
            echo 'Git Status:'
            git log -1 --oneline
            echo 'Process Status:'
            ps aux | grep -E '(next|npm)' | grep -v grep || echo 'No processes found'
            echo 'Latest logs:'
            tail -20 deploy.log 2>/dev/null || echo 'No deploy log found'
          "

  notify:
    name: 📢 Notify deployment result
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    
    steps:
      - name: 🎉 Success notification
        if: needs.deploy.result == 'success'
        run: |
          echo "🎉 Deployment successful!"
          echo "✅ Site: https://uchinokiroku.com"
          echo "📝 Commit: ${{ github.sha }}"
          
      - name: ❌ Failure notification  
        if: needs.deploy.result == 'failure'
        run: |
          echo "❌ Deployment failed!"
          echo "📝 Commit: ${{ github.sha }}"
          echo "🔍 Check logs for details"